{
  "hash": "03955238789ffd4a39ca55eee79bf44b",
  "result": {
    "markdown": "---\ntitle: \"Ploting Quantile Regressions: qregplot\"\nsubtitle: \"Because no one is average\"\ncode-fold: false\nexecute:\n  freeze: true\n---\n\n## Plotting quantile coefficients \n\nQuantile regressions are useful statistical tools that allow researchers to analyze the relationships between dependent and independent variables beyond their conditional means. To analyze such models, researchers commonly plot the estimation model coefficients across all estimated quantiles. This approach enables researchers to describe a larger set of coefficients, providing visuals of the trends and differences across the distribution.\n\nPreviously, the only command available to create distributional plots of this type was  [`grqreg`](https://github.com/jpazvd/grqreg). However, this program had two limitations. \n\n- It does not support factor notation. \n- It could only be used after the official commands `qreg`, `sqreg`, and `bsqreg`.\n\nWith the introduction of new commands that focus on the estimation of quantile regressions, under different assumptions of strategies, there was a need for an update to the `grqreg` program. This update came in the form of a new command called `qregplot`.\n\nThis page aims to demonstrate how to use the `qregplot` command to plot coefficients from quantile regressions, which is compatible with a variety of quantile type commands.\n\n## The Setup\n\nTo work with the following examples, you will need to install the following commands from SSC:\n\n```stata\nssc install qregplot, replace\nssc install mmqreg, replace\nssc install qrprocess, replace\nssc install ivqreg2, replace\nssc install qreg2, replace\nssc install xtqreg, replace\nssc install sivqr, replace\nssc install color_style, replace\n```\n\nAnd, for the data, we will use a very small dataset, available from Stata datasets examples:\n\n::: {.cell execution_count=1}\n``` {.stata .cell-code}\nclear all\nwebuse womenwk, clear\nset scheme white2\ncolor_style tableau\n```\n\n::: {.cell-output .cell-output-display}\n```\n<IPython.core.display.HTML object>\n```\n:::\n:::\n\n\n## How does it work?\n\nAt its core, the command `qregplot` has a very simple structure, and its workflow can be described as follows:\n\n1. You estimate a quantile regression model with the command of your choosing (if allowed in `qregplot`) for any quantile.\n2. `qregplot` reads all the metadata regarding the model specifictation, options, and command used from the information saved in e().\n3. Using the same data structure, estimates the exactly same model using for all quantiles of interest.\n4. Collects all coefficients, and confidence intervals, to prepare the information for plotting.\n5. Plots the coefficients of the selected variables.\n\n## Examples\n\nAssume you are interested in estimating a model, where wages are a function of age education,  marital status, and county of residence.\n\nFurthermore, lets say that we are interested in conditional quantile regressions. You could estimate this as follows:\n\n::: {.cell execution_count=2}\n``` {.stata .cell-code}\nqui:qreg wage age education married i.county\n```\n:::\n\n\nSince we are using quantile regressions, you want to plot some of the coefficients across the distribution for all variables but the county dummies.\n\nBecause I know I may have to re-edit the graphs, I'll store the coefficients into e_qreg. So I do not need to re-estimate all quantiles again.\n\n::: {.cell execution_count=3}\n``` {.stata .cell-code}\nqregplot age education married ,  /// Variables to be plotted. (Must appear in the model specification)\n         estore(e_qreg) /// Request Storing the variables in memory\n         q(5(5)95) // and indicates what quantiles to plot\n```\n\n::: {.cell-output .cell-output-display}\n![](stataviz2_files/figure-docx/cell-4-output-1.png){}\n:::\n:::\n\n\nThis is a very good start. In the newest version of `qregplot`, I add some default options to the plot, providing a look that is visually pleasing. Notice the margins are also tight (less waiste of space).\n\nNevertheless, I would like to use variable labels for titles in each figure. But I dont want to re-estimate them all, but what I can do is plot \"from\" the stored coefficients. When doint this, I do not need to specify `q(list of q's)` again. \n\n::: {.cell execution_count=4}\n``` {.stata .cell-code}\nqregplot age education married , ///\n        from(e_qreg) /// <- Indicates where to look for coefficients\n        label // No longer needed to add Q's and request Labels\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(results e_qreg are active now)\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](stataviz2_files/figure-docx/cell-5-output-2.png){}\n:::\n:::\n\n\nIf you want, you can change the color, intensity, or transparency of the confidence intervals. But if you like what you see (I do), you can just keep it.\n\nNow, say that I want to see this, but in 3 cols. This would be a graph combine option. I will use the new syntax :\n\n::: {.cell .column-page execution_count=5}\n``` {.stata .cell-code}\nqregplot age education married , ///\n        from(e_qreg) label ///\n        col(3) /// request 3 column with \n        ysize(5) xsize(10) // and different sizes for the graph\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(results e_qreg are active now)\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](stataviz2_files/figure-docx/cell-6-output-2.png){}\n:::\n:::\n\n\nWith the new command, you can also modify the titles and costumize them as needed:\n\n::: {.cell execution_count=6}\n``` {.stata .cell-code}\nqregplot age education married , ///\n        from(e_qreg) /// \n        col(2)   /// and different sizes for the graph\n        mtitles(\"Age in years o Edad en a単os desde 1900\" ///\n        \"A単os de Educacion or Years of Education, incluye Highschool\" ///\n        \"Is Married - Esta Casado\") //<- ads long titles\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(results e_qreg are active now)\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](stataviz2_files/figure-docx/cell-7-output-2.png){}\n:::\n:::\n\n\nSo, seems that the titles are too long. So lets adjust them using labelopt(options). This option tells the program to break the long titles into two lines, so there is less overlapping in the figure.\n\n::: {.cell execution_count=7}\n``` {.stata .cell-code}\nqregplot age education married , ///\n    from(e_qreg) /// \n    col(2)   /// and different sizes for the graph\n    mtitles(\"Age in years o Edad en a単os desde 1900\" ///\n    \"A単os de Educacion or Years of Education, incluye Highschool\" ///\n    \"Is Married - Esta Casado\") ///<- ads long titles\n    labelopt(lines(2)) // breaks it in two lines\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(results e_qreg are active now)\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](stataviz2_files/figure-docx/cell-8-output-2.png){}\n:::\n:::\n\n\n## Using other qreg commands\n\nAbove I showed you the basic syntax for most options. An advantage of `qregplot`, however, is that \nyou can use it for other commands as well. \n\nAs a side bonus, I showcase `color_style`, changing the colors of the different plots:\n\n::: {.cell execution_count=8}\n``` {.stata .cell-code}\nqui:bsqreg wage age education married i.county, reps(25) \ncolor_style bay \nqregplot age education ,  q(5(5)95) seed(101) label title(\"BSqreg\") ///\nysize(5) xsize(12)\n```\n\n::: {.cell-output .cell-output-display}\n![](stataviz2_files/figure-docx/cell-9-output-1.png){}\n:::\n:::\n\n\n::: {.cell execution_count=9}\n``` {.stata .cell-code}\nqui:qreg2 wage age education married i.county, \ncolor_style  austria  \nqregplot age education , q(5(5)95) seed(101) label ///\n    title(\"QREG2: from SSC\") ysize(5) xsize(12)\n```\n\n::: {.cell-output .cell-output-display}\n![](stataviz2_files/figure-docx/cell-10-output-1.png){}\n:::\n:::\n\n\n::: {.cell execution_count=10}\n``` {.stata .cell-code}\nqui:qrprocess wage age education married i.county, \ncolor_style  robert \nqregplot age education ,  q(5(5)95) seed(101) label ///\n    title(\"qrprocess: from SSC\")  ysize(5) xsize(12)\n```\n\n::: {.cell-output .cell-output-display}\n![](stataviz2_files/figure-docx/cell-11-output-1.png){}\n:::\n:::\n\n\n::: {.cell execution_count=11}\n``` {.stata .cell-code}\nqui:mmqreg wage age education married, abs( county)\ncolor_style derain \nqregplot age education ,  q(5(5)95) seed(101) label ///\n    title(\"mmqreg: from SSC\") ysize(5) xsize(12)\n```\n\n::: {.cell-output .cell-output-display}\n![](stataviz2_files/figure-docx/cell-12-output-1.png){}\n:::\n:::\n\n\n::: {.cell execution_count=12}\n``` {.stata .cell-code}\nqui:rifhdreg wage age education married, abs( county) rif(q(50))\ncolor_style shakira\nqregplot age education ,  q(5(5)95) seed(101) label ///\n    title(\"rifhdreg: from SSC\") ysize(5) xsize(12)\n```\n\n::: {.cell-output .cell-output-display}\n![](stataviz2_files/figure-docx/cell-13-output-1.png){}\n:::\n:::\n\n\n::: {.cell execution_count=13}\n``` {.stata .cell-code}\nqui:sivqr wage age education married, q(50)\ncolor_style troy\nqregplot age education,  q(5(5)95) seed(101) label ///\n    title(\"sivqr: from SSC\")  ysize(5) xsize(12)\n```\n\n::: {.cell-output .cell-output-display}\n![](stataviz2_files/figure-docx/cell-14-output-1.png){}\n:::\n:::\n\n\n## Conclusions\n\nThere you have it. A small update that makes making qreg plots easy. \n\nJust remember, `qregplot` is not a quantile regression estimator, it should be considered as a \npost estimation command that simply replicates what you had before.\n\nQuestions? comments? suggestions? \n\nfeel free to drop me a message.\n\n",
    "supporting": [
      "stataviz2_files\\figure-docx"
    ],
    "filters": []
  }
}