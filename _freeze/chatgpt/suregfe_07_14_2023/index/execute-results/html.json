{
  "hash": "b412f3e9a9158f572a76801e4f25f493",
  "result": {
    "markdown": "---\ntitle: \"How to `suest` a HDFE\"\ndescription: \"I propose a feasible strategy to compare coefficients across models with high dimensional fixed effects\"\nauthor: \"Fernando Rios-Avila\"\ndate: \"7/14/2023\"\ncategories: \n    - Stata\n    - Programming\n    - Fixed Effects\ndraft: false\nhighlight-style: github\ncode-fold: false\nexecute: \n  echo: true  \n---\n\n## Introduction\n\nA question I have seen online many...many...many times is how to compare the coefficients of a model that has been estimated using a highdimensional set of fixed effects.\n\nThe starting answer has always been...to `suest` the both equations, or *stack* both equations to compare the effects. However, `suest` will not work with `reghdfe` nor `xtreg`. And *stacking* equations is even less intuitive.\n\nToday, however, I will present you an easy way to do this with with a little command of my own creation, but also using some simple syntax.\n\n:::{.callout-note}\n\n## Setup\n\nTo use the strategies I will present here you will need `reghdfe` (from `ssc`) and `cre` (from `fra`, my own repository). You will need `frause` from ssc.\n\n:::\n\n## `suest` the problem\n\nLets start with a simple wage regression model, where we aim to compare the coefficients of men and women. For this, we will use the data set `oaxaca`, and a simple *Mincerian* regression model:\n\nFirst, lets estimate both models:\n\n::: {.cell execution_count=1}\n``` {.stata .cell-code}\nqui:frause oaxaca, clear\nqui:reg lnwage educ exper tenure age if female==0\nest sto male\nqui:reg lnwage educ exper tenure age if female==1\nest sto female\n```\n:::\n\n\nand use `suest` to put them together, and test if coefficients are different from each other or not. For this I will use `lincom` and `test` commands:\n\n::: {.cell execution_count=2}\n``` {.stata .cell-code}\nqui: suest male female\nlincom [male_mean]:educ-[female_mean]:educ\ntest [male_mean=female_mean]:educ\ntest [male_mean=female_mean], common\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n ( 1)  [male_mean]educ - [female_mean]educ = 0\n\n------------------------------------------------------------------------------\n             | Coefficient  Std. err.      z    P>|z|     [95% conf. interval]\n-------------+----------------------------------------------------------------\n         (1) |  -.0300371   .0119579    -2.51   0.012    -.0534741   -.0066001\n------------------------------------------------------------------------------\n\n ( 1)  [male_mean]educ - [female_mean]educ = 0\n\n           chi2(  1) =    6.31\n         Prob > chi2 =    0.0120\n\n ( 1)  [male_mean]educ - [female_mean]educ = 0\n ( 2)  [male_mean]exper - [female_mean]exper = 0\n ( 3)  [male_mean]tenure - [female_mean]tenure = 0\n ( 4)  [male_mean]age - [female_mean]age = 0\n\n           chi2(  4) =   26.63\n         Prob > chi2 =    0.0000\n```\n:::\n:::\n\n\nI could also use more involved methods like creating my own `ml` or `gmm` option, but there is no need in this simplified method.\n\n## Stacking\n\nThe next option is do *Stacking*. This sounds difficult, but its nothing different than using the old trick of interactions. we simply need to estimate a model where all covariates are interacted with our sampling indicator (gender):\n\n::: {.cell execution_count=3}\n``` {.stata .cell-code}\nqui:reg lnwage i.female##c.(educ exper tenure age), robust\nlincom 1.female#c.educ\ntest 1.female#c.educ\ntest 1.female#c.educ 1.female#c.exp 1.female#c.tenure 1.female#c.age\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n ( 1)  1.female#c.educ = 0\n\n------------------------------------------------------------------------------\n      lnwage | Coefficient  Std. err.      t    P>|t|     [95% conf. interval]\n-------------+----------------------------------------------------------------\n         (1) |   .0300371   .0119956     2.50   0.012     .0065062    .0535681\n------------------------------------------------------------------------------\n\n ( 1)  1.female#c.educ = 0\n\n       F(  1,  1424) =    6.27\n            Prob > F =    0.0124\n\n ( 1)  1.female#c.educ = 0\n ( 2)  1.female#c.exper = 0\n ( 3)  1.female#c.tenure = 0\n ( 4)  1.female#c.age = 0\n\n       F(  4,  1424) =    6.62\n            Prob > F =    0.0000\n```\n:::\n:::\n\n\nAgain we will obtain the same results as before. \n\nBut now the hard question. What if we have a HDFE?\n\n## Stacking FE\n\nTo simulate the sitution of a high-dimensional FE, I will use `age`. This will allow me to still obtain point estimates using simple regression (and say `suest`), while comparing it to the alternative:\n\n::: {.cell execution_count=4}\n``` {.stata .cell-code}\nqui:reg lnwage educ exper tenure i.age if female==0\nest sto male\nqui:reg lnwage educ exper tenure i.age if female==1\nest sto female\nqui:suest male female, cluster(age)\nlincom [male_mean]:educ-[female_mean]:educ\ntest [male_mean=female_mean]:educ exper tenure\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n ( 1)  [male_mean]educ - [female_mean]educ = 0\n\n------------------------------------------------------------------------------\n             | Coefficient  Std. err.      z    P>|z|     [95% conf. interval]\n-------------+----------------------------------------------------------------\n         (1) |  -.0354668   .0095251    -3.72   0.000    -.0541357   -.0167978\n------------------------------------------------------------------------------\n\n ( 1)  [male_mean]educ - [female_mean]educ = 0\n ( 2)  [male_mean]exper - [female_mean]exper = 0\n ( 3)  [male_mean]tenure - [female_mean]tenure = 0\n\n           chi2(  3) =   30.72\n         Prob > chi2 =    0.0000\n```\n:::\n:::\n\n\nNow the second method, using `reghdfe`\n\n::: {.cell execution_count=5}\n``` {.stata .cell-code}\negen age_fem = group(age  fem)\nqui:reghdfe lnwage i.female##c.(educ exper tenure), abs(female#age) cluster(age_fem)\nlincom 1.female#c.educ\ntest 1.female#c.educ 1.female#c.exp 1.female#c.tenure \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n ( 1)  1.female#c.educ = 0\n\n------------------------------------------------------------------------------\n      lnwage | Coefficient  Std. err.      t    P>|t|     [95% conf. interval]\n-------------+----------------------------------------------------------------\n         (1) |   .0354668   .0104804     3.38   0.001     .0146424    .0562911\n------------------------------------------------------------------------------\n\n ( 1)  1.female#c.educ = 0\n ( 2)  1.female#c.exper = 0\n ( 3)  1.female#c.tenure = 0\n\n       F(  3,    89) =    6.49\n            Prob > F =    0.0005\n```\n:::\n:::\n\n\n## Using `suest` and correlated random effects model `cre`\n\nNow we use Correlated Random Effects model to estimate the FE models:\n\n::: {.cell execution_count=6}\n``` {.stata .cell-code}\nqui:cre, keep prefix(ml) abs(age):reg lnwage educ exper tenure if female==0\nest sto male\nqui:cre, keep prefix(m2) abs(age):reg lnwage educ exper tenure if female==1\nest sto female\nqui:suest male female, cluster(age)\nlincom [male_mean]:educ-[female_mean]:educ\ntest [male_mean=female_mean]:educ exper tenure\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n ( 1)  [male_mean]educ - [female_mean]educ = 0\n\n------------------------------------------------------------------------------\n             | Coefficient  Std. err.      z    P>|z|     [95% conf. interval]\n-------------+----------------------------------------------------------------\n         (1) |  -.0354668   .0095251    -3.72   0.000    -.0541357   -.0167978\n------------------------------------------------------------------------------\n\n ( 1)  [male_mean]educ - [female_mean]educ = 0\n ( 2)  [male_mean]exper - [female_mean]exper = 0\n ( 3)  [male_mean]tenure - [female_mean]tenure = 0\n\n           chi2(  3) =   30.72\n         Prob > chi2 =    0.0000\n```\n:::\n:::\n\n\nWhich gives me exactly the same result!\n\n## Hard Example:\n\nLets do this with a harder example, using `nlswork` dataset, comparing of a wage regression coefficients between north and south:\n\n::: {.cell execution_count=7}\n``` {.stata .cell-code}\nwebuse nlswork, clear\negen cl = group(idcode south)\nqui: reghdfe ln_wage i.south##c.(age msp  not_smsa c_city union tenure hours) , abs(idcode#south) cluster(cl)\ntest 1.south#c.age 1.south#c.msp 1.south#c.union\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(National Longitudinal Survey of Young Women, 14-24 years old in 1968)\n(8 missing values generated)\n\n ( 1)  1.south#c.age = 0\n ( 2)  1.south#c.msp = 0\n ( 3)  1.south#c.union = 0\n\n       F(  3,  3586) =    1.24\n            Prob > F =    0.2941\n```\n:::\n:::\n\n\nBut also using CRE:\n\n::: {.cell execution_count=8}\n``` {.stata .cell-code}\nwebuse nlswork, clear\nqui:cre, abs(idcode) keep prefix(m1): regress ln_wage age msp not_smsa c_city union tenure hours if south==0  \nest sto north\nqui:cre, abs(idcode) keep prefix(m2): regress ln_wage age msp not_smsa c_city union tenure hours if south==1  \nest sto south\nqui:suest north south\ntest [north_mean=south_mean]: age msp union\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(National Longitudinal Survey of Young Women, 14-24 years old in 1968)\n\n ( 1)  [north_mean]age - [south_mean]age = 0\n ( 2)  [north_mean]msp - [south_mean]msp = 0\n ( 3)  [north_mean]union - [south_mean]union = 0\n\n           chi2(  3) =    3.82\n         Prob > chi2 =    0.2821\n```\n:::\n:::\n\n\n## Conclusions\n\nThere you have it. Two ways to compare coefficients across two models using interactions or `suest`. \n\nBoth provide the same results, if you cluster variables with the absorbed variable. \n\nHope you find it useful\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}